USE bd_caparao_conecta;

-- MySQL Script generated by MySQL Workbench
-- Thu Mar 27 16:17:00 2025
-- Model: Banco Capara√≥ Conecta    Version: 1.0
-- MySQL Workbench Forward Engineering


-- -----------------------------------------------------
-- Table `pessoa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pessoa` (
  `id_pessoa` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NOT NULL,
  `telefone` VARCHAR(11) NOT NULL,
  `sobre` TEXT NULL,
  `imagem` VARCHAR(255) NULL,
  PRIMARY KEY (`id_pessoa`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pessoaFisica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pessoaFisica` (
  `id_pessoa` INT NOT NULL,
  `cpf` VARCHAR(11) NOT NULL,
  `data_de_nascimento` DATE NULL,
  `sobrenome` VARCHAR(255) NOT NULL,
  `genero` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id_pessoa`),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC) VISIBLE,
  CONSTRAINT `fk_candidato_usuario`
    FOREIGN KEY (`id_pessoa`)
    REFERENCES `pessoa` (`id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `empresa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empresa` (
  `cnpj` VARCHAR(14) NOT NULL UNIQUE,
  `id_pessoa` INT NOT NULL,
  PRIMARY KEY (`id_pessoa`),
  UNIQUE INDEX `cnpj_UNIQUE` (`cnpj` ASC) VISIBLE,
  INDEX `fk_empresa_pessoa1_idx` (`id_pessoa` ASC) VISIBLE,
  CONSTRAINT `fk_empresa_pessoa1`
    FOREIGN KEY (`id_pessoa`)
    REFERENCES `pessoa` (`id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vagas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vagas` (
  `id_vagas` INT NOT NULL auto_increment,
  `titulo_vaga` VARCHAR(255) NOT NULL,
  `descricao` VARCHAR(255) NOT NULL,
  `salario` DECIMAL(9,2) NULL,
  `status` VARCHAR(255) NOT NULL,
  `data_criacao` DATE NULL,
  `data_fechamento` DATE NULL,
  `qtd_vaga` INT NOT NULL,
  `requisitos` VARCHAR(255) NULL,
  `imagem` VARCHAR(255) NULL,
  `qtd_vagas_preenchidas` INT NULL,
  `modalidade` INT NULL,
  `termo` TINYINT NULL,
  `id_empresa` INT NOT NULL,
  PRIMARY KEY (`id_vagas`),
  INDEX `fk_vagas_empresa1_idx` (`id_empresa` ASC) VISIBLE,
  CONSTRAINT `fk_vagas_empresa1`
    FOREIGN KEY (`id_empresa`)
    REFERENCES `empresa` (`id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pais`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pais` (
  `id_pais` INT NOT NULL auto_increment,
  `nome_pais` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_pais`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cidade` (
  `id_cidade` INT NOT NULL auto_increment,
  `nome_cidade` VARCHAR(255) NOT NULL,
  `id_pais` INT NOT NULL,
  PRIMARY KEY (`id_cidade`),
  INDEX `fk_Cidade_Pais1_idx` (`id_pais` ASC) VISIBLE,
  CONSTRAINT `fk_Cidade_Pais`
    FOREIGN KEY (`id_pais`)
    REFERENCES `pais` (`id_pais`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `endereco` (
  `id_endereco` INT NOT NULL auto_increment,
  `nome_estado` VARCHAR(255) NOT NULL,
  `cep` VARCHAR(10) NOT NULL,
  `id_cidade` INT NOT NULL,
  `bairro` VARCHAR(255) NOT NULL,
  `endereco` VARCHAR(255) NOT NULL,
  `estado` VARCHAR(255) NOT NULL,
  `id_pessoa` INT NOT NULL,
  PRIMARY KEY (`id_endereco`),
  INDEX `fk_Endereco_Cidade_idx` (`id_cidade` ASC) VISIBLE,
  INDEX `fk_endereco_pessoa_idx` (`id_pessoa` ASC) VISIBLE,
  CONSTRAINT `fk_Endereco_Cidade`
    FOREIGN KEY (`id_cidade`)
    REFERENCES `cidade` (`id_cidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_endereco_pessoa`
    FOREIGN KEY (`id_pessoa`)
    REFERENCES `pessoa` (`id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `experiencias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `experiencias` (
  `id_experiencias` INT NOT NULL auto_increment,
  `cargo` VARCHAR(255) NOT NULL,
  `nome_empresa` VARCHAR(255) NOT NULL,
  `comprovacao` TINYINT NOT NULL,
  `descricao` TEXT NULL,
  `id_pessoaFisica` INT NOT NULL,
  PRIMARY KEY (`id_experiencias`),
  INDEX `fk_Experiencias_Candidato_idx` (`id_pessoaFisica` ASC) VISIBLE,
  CONSTRAINT `fk_Experiencias_Candidato`
    FOREIGN KEY (`id_pessoaFisica`)
    REFERENCES `pessoaFisica` (`id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `instituicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `instituicao` (
  `id_instituicao` INT NOT NULL auto_increment,
  `nome` VARCHAR(255) NOT NULL,
  `id_cidade` INT NOT NULL,
  PRIMARY KEY (`id_instituicao`),
  INDEX `fk_instituicao_cidade_idx` (`id_cidade` ASC) VISIBLE,
  CONSTRAINT `fk_instituicao_cidade`
    FOREIGN KEY (`id_cidade`)
    REFERENCES `cidade` (`id_cidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `formacao_academica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `formacao_academica` (
  `id_formacao_academica` INT NOT NULL auto_increment,
  `escolaridade` VARCHAR(255) NOT NULL,
  `area_de_estudo` VARCHAR(255) NULL,
  `diploma_formacao` TINYINT NOT NULL,
  `conclusao_formacao` TINYINT NOT NULL,
  `data_emissao` DATE NOT NULL,
  `data_conclusao` DATE NOT NULL,
  `id_pessoaFisica` INT NOT NULL,
  `id_instituicao` INT NOT NULL,
  PRIMARY KEY (`id_formacao_academica`),
  INDEX `fk_Formacao_academica_Candidato_idx` (`id_pessoaFisica` ASC) VISIBLE,
  INDEX `fk_formacao_academica_instituicao_idx` (`id_instituicao` ASC) VISIBLE,
  CONSTRAINT `fk_Formacao_academica_Candidato`
    FOREIGN KEY (`id_pessoaFisica`)
    REFERENCES `pessoaFisica` (`id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_formacao_academica_instituicao`
    FOREIGN KEY (`id_instituicao`)
    REFERENCES `instituicao` (`id_instituicao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cursos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cursos` (
  `id_cursos` INT NOT NULL auto_increment,
  `curso` VARCHAR(255) NOT NULL,
  `organizacao_emissora` VARCHAR(255) NOT NULL,
  `cargo_horaria` VARCHAR(255) NOT NULL,
  `certificado_curso` TINYINT NOT NULL,
  `data_conclusao` DATE NOT NULL,
  `tipo_de_curso` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_cursos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `habilidades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `habilidades` (
  `id_habilidades` INT NOT NULL auto_increment,
  `nome` VARCHAR(255) NOT NULL,
  `status` VARCHAR(255) NULL,
  PRIMARY KEY (`id_habilidades`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `candidaturas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `candidaturas` (
  `id_vagas` INT NOT NULL,
  `id_pessoaFisica` INT NOT NULL,
  `data_candidatura` DATE NOT NULL,
  PRIMARY KEY (`id_vagas`, `id_pessoaFisica`),
  INDEX `fk_vagas_has_candidato_candidato_idx` (`id_pessoaFisica` ASC) VISIBLE,
  INDEX `fk_vagas_has_candidato_vagas_idx` (`id_vagas` ASC) VISIBLE,
  CONSTRAINT `fk_vagas_candidato`
    FOREIGN KEY (`id_vagas`)
    REFERENCES `vagas` (`id_vagas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_candidato_vaga`
    FOREIGN KEY (`id_pessoaFisica`)
    REFERENCES `pessoaFisica` (`id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `redesSociais`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `redesSociais` (
  `intagram` VARCHAR(255) NULL,
  `github` VARCHAR(255) NULL,
  `linkedin` VARCHAR(255) NULL,
  `curriculo_lattes` VARCHAR(255) NULL,
  `id_redeSociais` INT NOT NULL auto_increment,
  `id_pessoa` INT NOT NULL,
  PRIMARY KEY (`id_redeSociais`, `id_pessoa`),
  INDEX `fk_redesSociais_pessoa_idx` (`id_pessoa` ASC) VISIBLE,
  CONSTRAINT `fk_redesSociais_pessoa`
    FOREIGN KEY (`id_pessoa`)
    REFERENCES `pessoa` (`id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipo_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipo_usuario` (
  `id_tipo_usuario` INT NOT NULL auto_increment,
  `nome` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_tipo_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vagas_cursos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vagas_cursos` (
  `id_cursos` INT NOT NULL,
  `id_vagas` INT NOT NULL,
  PRIMARY KEY (`id_cursos`, `id_vagas`),
  INDEX `fk_cursos_profissionalizantes_has_vagas_vagas_idx` (`id_vagas` ASC) VISIBLE,
  INDEX `fk_cursos_profissionalizantes_has_vagas_cursos_profissional_idx` (`id_cursos` ASC) VISIBLE,
  CONSTRAINT `fk_cursos_vagas`
    FOREIGN KEY (`id_cursos`)
    REFERENCES `cursos` (`id_cursos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vagas_cursos`
    FOREIGN KEY (`id_vagas`)
    REFERENCES `vagas` (`id_vagas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vagas_habilidades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vagas_habilidades` (
  `id_habilidades` INT NOT NULL,
  `id_vagas` INT NOT NULL,
  PRIMARY KEY (`id_habilidades`, `id_vagas`),
  INDEX `fk_habilidades_has_vagas_vagas1_idx` (`id_vagas` ASC) VISIBLE,
  INDEX `fk_habilidades_has_vagas_habilidades1_idx` (`id_habilidades` ASC) VISIBLE,
  CONSTRAINT `fk_habilidades_vagas`
    FOREIGN KEY (`id_habilidades`)
    REFERENCES `habilidades` (`id_habilidades`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vagas_habilidades`
    FOREIGN KEY (`id_vagas`)
    REFERENCES `vagas` (`id_vagas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pessoaFisica_habilidades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pessoaFisica_habilidades` (
  `id_pessoaFisica` INT NOT NULL,
  `id_habilidades` INT NOT NULL,
  PRIMARY KEY (`id_pessoaFisica`, `id_habilidades`),
  INDEX `fk_candidato_has_habilidades_habilidades1_idx` (`id_habilidades` ASC) VISIBLE,
  INDEX `fk_candidato_has_habilidades_candidato1_idx` (`id_pessoaFisica` ASC) VISIBLE,
  CONSTRAINT `fk_pessoaFisica_habilidades`
    FOREIGN KEY (`id_pessoaFisica`)
    REFERENCES `pessoaFisica` (`id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_habilidades_pessoaFisica`
    FOREIGN KEY (`id_habilidades`)
    REFERENCES `habilidades` (`id_habilidades`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pessoaFisica_cursos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pessoaFisica_cursos` (
  `id_cursos` INT NOT NULL,
  `id_pessoaFisica` INT NOT NULL,
  PRIMARY KEY (`id_cursos`, `id_pessoaFisica`),
  INDEX `fk_cursos_has_candidato_candidato1_idx` (`id_pessoaFisica` ASC) VISIBLE,
  INDEX `fk_cursos_has_candidato_cursos1_idx` (`id_cursos` ASC) VISIBLE,
  CONSTRAINT `fk_cursos_pessoaFisica`
    FOREIGN KEY (`id_cursos`)
    REFERENCES `cursos` (`id_cursos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pessoaFisica_cursos`
    FOREIGN KEY (`id_pessoaFisica`)
    REFERENCES `pessoaFisica` (`id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usuario` (
  `email` VARCHAR(255) NOT NULL,
  `senha` VARCHAR(512) NOT NULL,
  `id_tipo_usuario` INT NOT NULL,
  `id_pessoa` INT NOT NULL,
  INDEX `fk_usuario_tipo_usuario1_idx` (`id_tipo_usuario` ASC) VISIBLE,
  PRIMARY KEY (`id_pessoa`),
  CONSTRAINT `fk_tipoUsuario_usuario`
    FOREIGN KEY (`id_tipo_usuario`)
    REFERENCES `tipo_usuario` (`id_tipo_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_pessoa`
    FOREIGN KEY (`id_pessoa`)
    REFERENCES `pessoa` (`id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

ALTER TABLE `endereco` MODIFY `cep` VARCHAR(10) NOT NULL;

-- Garantir que nome seja NOT NULL na tabela tipo_usuario (j√° est√° definido como NOT NULL no CREATE TABLE)
ALTER TABLE `tipo_usuario` MODIFY `nome` VARCHAR(255) NOT NULL; 

-- Garantir que nome seja NOT NULL na tabela instituicao (j√° est√° definido como NOT NULL no CREATE TABLE)
ALTER TABLE `instituicao` MODIFY `nome` VARCHAR(255) NOT NULL; 

-- Adicionar constraint UNIQUE para cpf na tabela pessoaFisica (j√° est√° definido como UNIQUE no CREATE TABLE)
ALTER TABLE `pessoaFisica` ADD CONSTRAINT `uc_cpf` UNIQUE (`cpf`); 

-- Alterar data_de_nascimento para NOT NULL na tabela pessoaFisica
ALTER TABLE `pessoaFisica` MODIFY `data_de_nascimento` DATE NOT NULL;

-- Alterar telefone para NOT NULL na tabela pessoa (j√° est√° definido como NOT NULL no CREATE TABLE)
ALTER TABLE `pessoa` MODIFY `telefone` VARCHAR(11) NOT NULL; 

-- Alterar tipo_de_curso para NOT NULL na tabela cursos
ALTER TABLE `cursos` MODIFY `tipo_de_curso` VARCHAR(255) NOT NULL;

-- Alterar sobrenome para NOT NULL na tabela pessoaFisica
ALTER TABLE `pessoaFisica` MODIFY `sobrenome` VARCHAR(255) NOT NULL;

ALTER TABLE `pessoaFisica` ADD `genero` VARCHAR(50) NOT NULL;
